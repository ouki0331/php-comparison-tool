<?php
return [
    'strlen' => [
        // null テスト
        [null],
        // 空文字列テスト
        [""],
        // 通常の文字列テスト
        ["hello"],
        ["こんにちは"],
        ["hello world"],
        ["a"],
        ["123"],
        ["3.14"],
        ["true"],
        ["false"],
        // 数値テスト
        [123],
        [3.14],
        [0],
        [-456],
        // 真偽値テスト
        [true],
        [false],
        // 配列テスト（無効な型）
        [[]],
        [[1, 2, 3]],
        [["a", "b"]],
        // オブジェクトテスト（無効な型）
        [new stdClass()],
        // 特殊文字テスト
        ["\n"],
        ["\t"],
        ["\\"],
        [" "],
        ["   "],
        ["Hello\nWorld"],
        ["Special chars: !@#$%^&*()"],
        ["UTF-8: こんにちは世界"],
        ["絵文字: 😀😃😄"]
    ],
    'substr' => [
        // null テスト
        [null, 0],
        [null, 1],
        [null, -1],
        [null, 0, 3],
        // 空文字列テスト
        ["", 0],
        ["", 1],
        ["", -1],
        ["", 0, 3],
        // 通常の文字列テスト
        ["hello", 0],
        ["hello", 1],
        ["hello", -1],
        ["hello", -2],
        ["hello", 5],
        ["hello", 10],
        ["hello", 0, 3],
        ["hello", 1, 3],
        ["hello", -2, 1],
        ["hello", 0, 0],
        ["hello", 0, -1],
        ["hello", 1, -1],
        ["hello", 0, 100],
        ["hello", -10, 3],
        // 数値テスト
        [123, 0],
        [123, 1],
        [123, -1],
        [123, 0, 2],
        [3.14, 0],
        [3.14, 1],
        [3.14, -1],
        [3.14, 0, 3],
        // 真偽値テスト
        [true, 0],
        [true, 1],
        [true, 0, 1],
        [false, 0],
        [false, 1],
        [false, 0, 1],
        // 配列テスト（無効な型）
        [[], 0],
        [[], 1],
        [[1, 2, 3], 0],
        [[1, 2, 3], 1],
        // オブジェクトテスト（無効な型）
        [new stdClass(), 0],
        [new stdClass(), 1],
        // ゼロテスト
        [0, 0],
        [0, 1],
        [-456, 0],
        [-456, 1],
        [-456, -1],
        // 日本語文字列テスト
        ["こんにちは", 0],
        ["こんにちは", 1],
        ["こんにちは", 0, 2]
    ],
    'strpos' => [
        // null テスト
        [null, ""],
        [null, "a"],
        [null, null],
        [null, 0],
        // 空文字列テスト
        ["", ""],
        ["", "a"],
        ["", null],
        ["", 0],
        // 通常の文字列検索テスト
        ["hello", ""],
        ["hello", "h"],
        ["hello", "e"],
        ["hello", "l"],
        ["hello", "o"],
        ["hello", "x"],
        ["hello", "hello"],
        ["hello", "helloworld"],
        ["hello", "ll"],
        ["hello", "lo"],
        ["hello", "ell"],
        ["hello", "H"],
        ["hello", "HELLO"],
        // オフセット付き検索テスト
        ["hello", "l", 0],
        ["hello", "l", 1],
        ["hello", "l", 2],
        ["hello", "l", 3],
        ["hello", "l", 4],
        ["hello", "l", 5],
        ["hello", "l", -1],
        ["hello", "l", -2],
        ["hello", "l", -5],
        ["hello", "l", -6],
        ["hello", "l", 10],
        // 数値テスト
        [123, "1"],
        [123, "2"],
        [123, "3"],
        [123, "4"],
        [123, "12"],
        [123, "23"],
        [123, "123"],
        [123, 1],
        [123, 2],
        [123, 123],
        [3.14, "3"],
        [3.14, "."],
        [3.14, "1"],
        [3.14, "4"],
        [3.14, "5"],
        [3.14, "3.14"],
        // 真偽値テスト
        [true, "1"],
        [true, "0"],
        [true, ""],
        [true, "true"],
        [false, ""],
        [false, "0"],
        [false, "1"],
        [false, "false"],
        // 配列テスト（無効な型）
        [[], "A"],
        [[], ""],
        [[1, 2, 3], "A"],
        [[1, 2, 3], ""],
        // オブジェクトテスト（無効な型）
        [new stdClass(), "O"],
        [new stdClass(), ""],
        // ゼロテスト
        [0, "0"],
        [0, ""],
        [0, "1"],
        [-456, "-"],
        [-456, "4"],
        [-456, "456"],
        [-456, "-456"],
        // 日本語文字列テスト
        ["こんにちは", "こ"],
        ["こんにちは", "ん"],
        ["こんにちは", "は"],
        // 特殊文字テスト
        ["Hello\nWorld", "\n"],
        ["Hello\tWorld", "\t"]
    ],
    'str_replace' => [
        // 基本的な置換テスト
        ["a", "b", "abc"],
        ["a", "b", "aaa"],
        ["ll", "XX", "hello"],
        ["", "X", "hello"],
        ["hello", "", "hello world"],
        ["hello", "hi", "hello world hello"],
        // null パラメータテスト
        [null, "b", "abc"],
        ["a", null, "abc"],
        ["a", "b", null],
        [null, null, null],
        // 空文字列テスト
        ["", "", ""],
        ["", "", "hello"],
        // 数値テスト
        [123, 456, "123abc123"],
        ["123", "456", 123],
        // 真偽値テスト
        [true, false, "true"],
        ["true", "false", true],
        // 配列テスト（無効な型）
        [[], "b", "abc"],
        ["a", [], "abc"],
        ["a", "b", []],
        // オブジェクトテスト（無効な型）
        [new stdClass(), "b", "abc"],
        ["a", new stdClass(), "abc"],
        ["a", "b", new stdClass()],
        // 配列パラメータテスト
        [["a", "b"], ["x", "y"], "abc"],
        ["a", ["x", "y"], "abc"],
        [["a", "b"], "x", "abc"],
        // 浮動小数点テスト
        [3.14, 2.71, "3.14 is pi"],
        ["3.14", "2.71", 3.14],
        // ゼロテスト
        [0, 1, "0123"],
        ["0", "1", 0]
    ],
        'implode' => [
        // 基本的なテスト
        [",", ["a", "b", "c"]],
        [["a", "b", "c"]],
        ["", ["a", "b", "c"]],
        [null, ["a", "b", "c"]],
        [",", null],
        [",", "string"],
        [",", 123],
        [",", true],
        [",", false],
        [",", []],
        
        // 数値区切り文字テスト
        [0, ["a", "b", "c"]],
        [123, ["x", "y", "z"]],
        [-1, ["hello", "world"]],
        [3.14, ["a", "b"]],
        [0.5, ["x", "y", "z"]],
        
        // 真偽値区切り文字テスト
        [true, ["a", "b", "c"]],
        [false, ["x", "y", "z"]],
        
        // 複雑な区切り文字テスト
        [":::", ["x", "y", "z"]],
        ["\n", ["line1", "line2", "line3"]],
        ["\t", ["col1", "col2", "col3"]],
        ["\\", ["path", "to", "file"]],
        [" — ", ["section1", "section2"]],
        ["<=>", ["left", "right"]],
        
        // 空配列テスト
        [",", []],
        ["-", []],
        ["", []],
        
        // 単一要素配列テスト
        [",", ["single"]],
        ["-", ["only"]],
        ["", ["one"]],
        
        // 数値配列テスト
        [",", [1, 2, 3]],
        ["-", [100, 200, 300]],
        ["", [7, 8, 9]],
        [",", [1.1, 2.2, 3.3]],
        [".", [3.14, 2.71, 1.41]],
        
        // 真偽値配列テスト
        [",", [true, false, true]],
        ["-", [true, true, false]],
        ["", [false, true]],
        
        // 混合配列テスト
        [",", ["hello", 123, true]],
        ["-", [1, "two", 3.14, false]],
        [" ", ["a", 1, true, 2.5]],
        
        // null要素テスト
        [",", ["a", null, "c"]],
        ["-", [null, "hello", null]],
        ["", [null, null, null]],
        
        // 空文字列要素テスト
        [",", ["a", "", "c"]],
        ["-", ["", "hello", ""]],
        ["", ["", "", ""]],
        
        // 連想配列テスト
        [",", ["key1" => "value1", "key2" => "value2"]],
        ["-", ["a" => 1, "b" => 2, "c" => 3]],
        ["", ["x" => "hello", "y" => "world"]],
        
        // ネストした配列テスト
        [",", ["a", ["nested"], "c"]],
        ["-", [["x"], ["y"]]],
        
        // オブジェクトテスト
        [",", ["a", new stdClass(), "c"]],
        [new stdClass(), ["x", "y"]],
        [[], ["a", "b", "c"]],
        [new stdClass(), ["a", "b", "c"]],
        
        // パラメータ順序テスト
        [["a", "b", "c"], ","],
        [[1, 2, 3], "-"]
    ],
    'count' => [
        // null テスト
        [null],
        [null, COUNT_NORMAL],
        [null, COUNT_RECURSIVE],
        
        // 空配列テスト
        [[]],
        [[], COUNT_NORMAL],
        [[], COUNT_RECURSIVE],
        
        // 単純配列テスト
        [[1, 2, 3]],
        [[1, 2, 3], COUNT_NORMAL],
        [[1, 2, 3], COUNT_RECURSIVE],
        [["a", "b", "c"]],
        [["hello", "world"]],
        [["hello", "world"], COUNT_RECURSIVE],
        
        // 連想配列テスト
        [["key1" => "value1", "key2" => "value2"]],
        [["a" => 1, "b" => 2, "c" => 3], COUNT_NORMAL],
        [["a" => 1, "b" => 2, "c" => 3], COUNT_RECURSIVE],
        
        // ネストした配列テスト
        [[1, [2, 3], 4]],
        [[1, [2, 3], 4], COUNT_NORMAL],
        [[1, [2, 3], 4], COUNT_RECURSIVE],
        [[1, [2, [3, 4]], 5]],
        [[1, [2, [3, 4]], 5], COUNT_RECURSIVE],
        [[[1, 2], [3, [4, 5]]], COUNT_RECURSIVE],
        [["a", ["b", "c"], "d"], COUNT_RECURSIVE],
        [[1, ["hello", [true, false]], 3.14], COUNT_RECURSIVE],
        [[[], []], COUNT_RECURSIVE],
        [[1, [], [2, 3]], COUNT_RECURSIVE],
        [[[], [[], []]], COUNT_RECURSIVE],
        
        // 文字列テスト
        ["hello"],
        ["hello", COUNT_RECURSIVE],
        [""],
        ["0"],
        
        // 数値テスト
        [123],
        [123, COUNT_RECURSIVE],
        [0],
        [3.14],
        [0.0],
        [3.14, COUNT_RECURSIVE],
        
        // 真偽値テスト
        [true],
        [false],
        [true, COUNT_RECURSIVE],
        [false, COUNT_RECURSIVE],
        
        // オブジェクトテスト
        [new stdClass()],
        [new stdClass(), COUNT_RECURSIVE],
        [new ArrayObject([1, 2, 3])],
        [new ArrayObject([1, 2, 3]), COUNT_RECURSIVE],
        [new ArrayObject(["a" => 1, "b" => 2])],
        [new ArrayObject([1, new ArrayObject([2, 3]), 4]), COUNT_RECURSIVE],
        
        // 特殊値テスト
        [[null, null, null]],
        [[1, null, 3], COUNT_RECURSIVE],
        [[null, [null, null]], COUNT_RECURSIVE],
        [["", "", ""]],
        [["a", "", "c"], COUNT_RECURSIVE],
        
        // 大きな配列テスト
        [range(1, 100)],
        [range(1, 100), COUNT_RECURSIVE],
        
        // 無効なモードテスト
        [[1, 2, 3], 999],
        [[1, 2, 3], -1],
        [[1, 2, 3], "invalid"],
        
        // 深いネストテスト
        [[[[[1]]]]], 
        [[[[[1]]]], COUNT_RECURSIVE],
        [[1, [2, [3, [4, [5]]]]], COUNT_RECURSIVE]
    ],
    'array_merge' => [
        // パラメータなしテスト
        [],
        
        // 単一配列テスト
        [[]],
        [[1, 2, 3]],
        [["a", "b", "c"]],
        [["key" => "value"]],
        
        // 複数配列テスト
        [[], []],
        [[1, 2], [3, 4]],
        [["a", "b"], ["c", "d"]],
        [[1, 2, 3], ["a", "b", "c"]],
        [["key1" => "value1"], ["key2" => "value2"]],
        [["a" => 1], ["a" => 2]],
        
        // null パラメータテスト
        [null],
        [[1, 2], null],
        [null, [3, 4]],
        [null, null],
        
        // 文字列パラメータテスト
        ["string"],
        [[1, 2], "string"],
        ["string", [3, 4]],
        
        // 数値パラメータテスト
        [123],
        [[1, 2], 123],
        [123, [3, 4]],
        
        // 真偽値パラメータテスト
        [true],
        [[1, 2], true],
        [true, [3, 4]],
        [false],
        [[1, 2], false],
        
        // オブジェクトパラメータテスト
        [new stdClass()],
        [[1, 2], new stdClass()],
        [new stdClass(), [3, 4]],
        
        // 複数パラメータ混合テスト
        [[1], [2], [3]],
        [[1], null, [3]],
        [[1], "string", [3]],
        [[], [], []],
        [["a"], ["b"], ["c"]],
        [["x" => 1], ["y" => 2], ["z" => 3]]
    ],
        'array_keys' => [
        // 基本配列テスト
        [["a" => 1, "b" => 2, "c" => 3]],
        [[1, 2, 3]],
        [[]],
        [["key" => "value"]],
        
        // 検索値テスト
        [["a" => 1, "b" => 2, "c" => 1], 1],
        [["a" => 1, "b" => 2, "c" => 1], 1, true],
        [["a" => 1, "b" => 2, "c" => 1], "1"],
        [["a" => 1, "b" => 2, "c" => 1], "1", true],
        [["a" => 1, "b" => 2, "c" => 1], 2],
        [["a" => 1, "b" => 2, "c" => 1], 999],
        
        // 数値インデックステスト
        [[10, 20, 30], 20],
        [[10, 20, 30], "20"],
        [[10, 20, 30], 20, true],
        [[10, 20, 30], "20", true],
        
        // 混合型テスト
        [["a" => true, "b" => false, "c" => 1], true],
        [["a" => true, "b" => false, "c" => 1], 1],
        [["a" => true, "b" => false, "c" => 1], true, true],
        [["a" => true, "b" => false, "c" => 1], 1, true],
        
        // null と空値テスト
        [["a" => null, "b" => "", "c" => 0], null],
        [["a" => null, "b" => "", "c" => 0], ""],
        [["a" => null, "b" => "", "c" => 0], 0],
        [["a" => null, "b" => "", "c" => 0], false],
        
        // 無効な入力テスト
        [null],
        ["string"],
        [123],
        [true],
        [false],
        [new stdClass()],
        
        // 無効な検索値型テスト
        [[], 1],
        [null, 1],
        ["string", 1],
        [123, 1],
        [new stdClass(), 1]
    ],
    'array_values' => [
        // 基本配列テスト
        [["a" => 1, "b" => 2, "c" => 3]],
        [[1, 2, 3]],
        [[]],
        [["key" => "value"]],
        [["hello", "world"]],
        
        // 混合キーテスト
        [[0 => "a", "key" => "b", 1 => "c"]],
        [["x" => 1, "y" => 2, "z" => 3]],
        
        // 不連続数値キーテスト
        [[10 => "a", 5 => "b", 1 => "c"]],
        
        // null と空値を含むテスト
        [["a" => null, "b" => "", "c" => 0]],
        [[null, "", 0, false]],
        
        // 無効な入力テスト
        [null],
        ["string"],
        [123],
        [3.14],
        [true],
        [false],
        [new stdClass()]
    ],
    'in_array' => [
        // 基本検索テスト
        [1, [1, 2, 3]],
        ["1", [1, 2, 3]],
        [1, [1, 2, 3], true],
        ["1", [1, 2, 3], true],
        [4, [1, 2, 3]],
        ["hello", ["hello", "world"]],
        ["HELLO", ["hello", "world"]],
        
        // 型比較テスト
        [true, [1, 2, 3]],
        [false, [0, 1, 2]],
        [true, [1, 2, 3], true],
        [false, [0, 1, 2], true],
        
        // null 検索テスト
        [null, [1, 2, 3]],
        [null, [null, 1, 2]],
        [null, [null, 1, 2], true],
        [null, ["", 0, false]],
        [null, ["", 0, false], true],
        
        // 空値検索テスト
        ["", ["", "hello", "world"]],
        [0, [0, 1, 2]],
        [false, [false, true]],
        
        // 連想配列テスト
        ["value", ["key" => "value", "key2" => "value2"]],
        ["key", ["key" => "value", "key2" => "value2"]],
        
        // 無効な haystack テスト
        [1, null],
        [1, "string"],
        [1, 123],
        [1, true],
        [1, false],
        [1, new stdClass()],
        [1, []],
        [null, null]
    ],
    'array_key_exists' => [
        // 文字列キーテスト
        ["a", ["a" => 1, "b" => 2]],
        ["c", ["a" => 1, "b" => 2]],
        ["key", ["key" => "value"]],
        ["", ["" => "empty key"]],
        
        // 数値キーテスト
        [0, [1, 2, 3]],
        [1, [1, 2, 3]],
        [3, [1, 2, 3]],
        [0, ["a", "b", "c"]],
        
        // 混合キーテスト
        [0, [0 => "zero", "key" => "value"]],
        ["key", [0 => "zero", "key" => "value"]],
        
        // null キーテスト
        [null, [null => "null key", "a" => 1]],
        [null, ["a" => 1, "b" => 2]],
        
        // 特殊キー型テスト
        [true, [true => "bool key"]],
        [false, [false => "bool key"]],
        [1, [true => "bool key"]],
        [0, [false => "bool key"]],
        
        // 無効なキーテスト
        [[], ["a" => 1, "b" => 2]],
        [new stdClass(), ["a" => 1, "b" => 2]],
        
        // 無効な配列テスト
        ["a", null],
        ["a", "string"],
        ["a", 123],
        ["a", true],
        ["a", false],
        ["a", new stdClass()],
        [null, null],
        
        // オブジェクトを配列として扱うテスト
        ["property", (object)["property" => "value"]]
    ],
    'json_decode' => [
        // 有効な JSON テスト
        ['{"a":1,"b":2}'],
        ['[1,2,3]'],
        ['"hello"'],
        ['123'],
        ['true'],
        ['false'],
        ['null'],
        ['{"nested":{"key":"value"}}'],
        ['[{"a":1},{"b":2}]'],
        
        // 無効な JSON テスト
        ['invalid json'],
        ['{invalid}'],
        ['{"unclosed":'],
        ['[1,2,3,]'],
        
        // 非文字列入力テスト
        [null],
        [123],
        [3.14],
        [true],
        [false],
        [[]],
        [["a" => 1]],
        [new stdClass()],
        
        // パラメータテスト
        ['{"a":1}', true],
        ['{"a":1}', false],
        ['{"a":1}', null],
        ['[1,2,3]', true],
        ['[1,2,3]', false],
        
        // 深度テスト
        ['{"a":{"b":{"c":1}}}', null, 2],
        ['{"a":{"b":{"c":1}}}', null, 1],
        
        // フラグテスト
        ['{"a":1,"b":2}', null, 512, JSON_OBJECT_AS_ARRAY],
        
        // 空文字列テスト
        [''],
        [' '],
        
        // 特殊文字テスト
        ['{"unicode":"\\u0041"}'],
        ['{"escaped":"\"quote\""}']
    ],
        'mb_strlen' => [
        // 基本テスト
        [null],
        [""],
        ["hello"],
        ["こんにちは"],
        ["hello world"],
        ["a"],
        
        // 数値テスト
        [123],
        [3.14],
        [0],
        [-456],
        
        // 真偽値テスト
        [true],
        [false],
        
        // 無効な型テスト
        [[]],
        [[1, 2, 3]],
        [new stdClass()],
        
        // エンコーディングテスト
        ["hello", "UTF-8"],
        ["こんにちは", "UTF-8"],
        ["hello", "ASCII"],
        ["hello", null],
        
        // 特殊文字テスト
        ["\n"],
        ["\t"],
        ["\\"],
        [" "],
        ["   "],
        ["Hello\nWorld"],
        ["UTF-8: こんにちは世界"],
        ["絵文字: 😀😃😄"],
        
        // マルチバイト文字テスト
        ["カフェ", "UTF-8"],
        ["ナイーブ", "UTF-8"],
        ["レジュメ", "UTF-8"]
    ],
    'mb_substr' => [
        // 基本テスト
        [null, 0],
        [null, 1],
        [null, -1],
        [null, 0, 3],
        ["", 0],
        ["", 1],
        ["", -1],
        ["", 0, 3],
        
        // 英語文字列テスト
        ["hello", 0],
        ["hello", 1],
        ["hello", -1],
        ["hello", -2],
        ["hello", 5],
        ["hello", 10],
        ["hello", 0, 3],
        ["hello", 1, 3],
        ["hello", -2, 1],
        ["hello", 0, 0],
        ["hello", 0, -1],
        ["hello", 1, -1],
        ["hello", 0, 100],
        ["hello", -10, 3],
        
        // マルチバイト文字列テスト
        ["こんにちは", 0],
        ["こんにちは", 1],
        ["こんにちは", -1],
        ["こんにちは", 0, 2],
        ["こんにちは", 1, 2],
        ["こんにちは", -2, 1],
        
        // 数値テスト
        [123, 0],
        [123, 1],
        [123, -1],
        [123, 0, 2],
        [3.14, 0],
        [3.14, 1],
        [3.14, -1],
        [3.14, 0, 3],
        
        // 真偽値テスト
        [true, 0],
        [true, 1],
        [true, 0, 1],
        [false, 0],
        [false, 1],
        [false, 0, 1],
        
        // 無効な型テスト
        [[], 0],
        [[], 1],
        [[1, 2, 3], 0],
        [[1, 2, 3], 1],
        [new stdClass(), 0],
        [new stdClass(), 1],
        
        // エンコーディングテスト
        ["hello", 0, 3, "UTF-8"],
        ["こんにちは", 0, 2, "UTF-8"],
        ["カフェ", 0, 3, "UTF-8"],
        ["ナイーブ", 1, 3, "UTF-8"]
    ],
    'mb_strpos' => [
        // 基本テスト
        [null, ""],
        [null, "a"],
        [null, null],
        [null, 0],
        ["", ""],
        ["", "a"],
        ["", null],
        ["", 0],
        
        // 英語文字列テスト
        ["hello", ""],
        ["hello", "h"],
        ["hello", "e"],
        ["hello", "l"],
        ["hello", "o"],
        ["hello", "x"],
        ["hello", "hello"],
        ["hello", "helloworld"],
        ["hello", "ll"],
        ["hello", "lo"],
        ["hello", "ell"],
        ["hello", "H"],
        ["hello", "HELLO"],
        
        // 位置テスト
        ["hello", "l", 0],
        ["hello", "l", 1],
        ["hello", "l", 2],
        ["hello", "l", 3],
        ["hello", "l", 4],
        ["hello", "l", 5],
        ["hello", "l", -1],
        ["hello", "l", -2],
        ["hello", "l", -5],
        ["hello", "l", -6],
        ["hello", "l", 10],
        
        // 数値テスト
        [123, "1"],
        [123, "2"],
        [123, "3"],
        [123, "4"],
        [123, "12"],
        [123, "23"],
        [123, "123"],
        [123, 1],
        [123, 2],
        [123, 123],
        [3.14, "3"],
        [3.14, "."],
        [3.14, "1"],
        [3.14, "4"],
        [3.14, "5"],
        [3.14, "3.14"],
        
        // 真偽値テスト
        [true, "1"],
        [true, "0"],
        [true, ""],
        [true, "true"],
        [false, ""],
        [false, "0"],
        [false, "1"],
        [false, "false"],
        
        // 無効な型テスト
        [[], "A"],
        [[], ""],
        [[1, 2, 3], "A"],
        [[1, 2, 3], ""],
        [new stdClass(), "O"],
        [new stdClass(), ""],
        
        // マルチバイト文字列テスト
        ["こんにちは", "こ"],
        ["こんにちは", "ん"],
        ["こんにちは", "は"],
        ["こんにちは", "ち"],
        ["こんにちは", "x"],
        
        // エンコーディングテスト
        ["こんにちは", "こ", 0, "UTF-8"],
        ["こんにちは", "ん", 0, "UTF-8"],
        ["カフェ", "フ", 0, "UTF-8"],
        ["ナイーブ", "ー", 0, "UTF-8"],
        
        // 特殊文字テスト
        ["Hello\nWorld", "\n"],
        ["Hello\tWorld", "\t"],
        ["パス\\ファイル", "\\"],
        
        // 絵文字テスト
        ["😀😃😄", "😃"],
        ["😀😃😄", "😄"],
        ["😀😃😄", "😊"]
    ]

];
